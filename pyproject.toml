[build-system]
requires = ["hatchling>=1.24", "hatch-vcs>=0.4"]
build-backend = "hatchling.build"

[project]
name = "resview"
dynamic = ["version"]
description = "ResView â€” Reciprocal Space Builder and Viewer"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
authors = [{ name = "Xiaogang Yang", email = "yangxg@bnl.gov" }]
requires-python = ">=3.13,<3.14"  # limit Python to versions with vtk wheels (no cp314 yet)
classifiers = [
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Operating System :: OS Independent",
]
dependencies = [
  # Priority fixed versions:
  "napari==0.6.6",
  "xrayutilities==1.7.10",
  # Other deps relaxed
  "numpy>=2.3.3",
  "pandas>=2.3.3",
  "dask>=2024.8.0",
  "pyarrow>=21.0.0",
  "hdf5plugin>=6.0.0",
  "pyyaml>=6.0.3",
  "qtpy>=2.4.3",
  "pyside6>=6.8",
  "magicgui>=0.10.1",
  # vtk wheel not available for linux-aarch64 (pip). Keep pin elsewhere, skip on aarch64.
  "vtk==9.4.2; platform_machine != 'aarch64'",
]
# Priority strategy: pin only napari & xrayutilities; others float upward.

[project.optional-dependencies]
auto = [
  "napari==0.5.6",
  "xrayutilities==1.7.10",
  "numpy>=2.3.3",
  "pandas>=2.3.3",
  "dask[dataframe]>=2024.8.0",
  "pyarrow>=21.0.0",
  "hdf5plugin>=6.0.0",
  "pyyaml>=6.0.3",
  "qtpy>=2.4.3",
  "pyside6>=6.8",
  "magicgui>=0.10.1",
  "vtk>=9.4.2; platform_machine != 'aarch64'",
]

[project.urls]
Homepage = "https://github.com/XYangXRay/resview"
Issues   = "https://github.com/XYangXRay/resview/issues"

[project.scripts]
resview = "resview.gui:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
include = ["src", "README.md", "LICENSE"]

[tool.hatch.build.targets.wheel]
packages = ["src/resview", "src/rsm3d"]

[tool.ruff]
line-length = 100
lint.select = ["E", "F", "I", "B"]
lint.ignore = ["E501"]

[tool.pixi.workspace]
# Removed 'defaults' (404 at https://conda.anaconda.org/defaults/). All deps available on conda-forge.
# If you need Anaconda Main later, specify direct URL channel instead.
channels = ["conda-forge"]
platforms = [
  "osx-arm64",
  "osx-64",
  "linux-64",
  "win-64"
]
# Wheel install inside pixi shell:
# When you pip install dist/resview-*.whl inside this shell:
#   - Existing conda-installed packages (from conda-forge/defaults) satisfying pinned versions are reused.
#   - Any missing or mismatched pinned versions are fetched from PyPI and may shadow conda builds.
#   - Mixing conda and PyPI wheels for compiled libs (numpy, vtk, pyside6) can cause ABI issues if versions differ.
# To avoid conflicts:
#   1) Ensure pixi environment matches pins before installing the wheel.
#   2) Or build the wheel in the same pixi environment.

[tool.pixi.pypi-dependencies]
resview = { path = ".", editable = true }
# NOTE: Entering `pixi shell` solves and installs this editable package automatically;
# no separate `pip install -e .` needed. The `resview` console script will be on PATH.

[tool.pixi.environments]
default = { solve-group = "default" }


[tool.pixi.tasks]
